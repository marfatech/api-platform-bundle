{
    "name":        "marfatech/api-platform-bundle",
    "description": "Extends Symfony HttpFoundation and provides encapsulated area for work with REST API",
    "type":        "symfony-bundle",
    "keywords":    ["symfony-bundle", "api-platform", "rest", "api", "http-foundation"],
    "license":     "MIT",

    "require": {
        "php":                                  "~7.4||~8.0",
        "ext-json":                             "*",
        "psr/log":                              "^1.0",
        "symfony/config":                       "~3.4||~4.0||~5.0",
        "symfony/dependency-injection":         "~3.4||~4.0||~5.0",
        "symfony/http-foundation":              "~3.4||~4.0||~5.0",
        "symfony/http-kernel":                  "~3.4||~4.0||~5.0",
        "symfony/options-resolver":             "~3.4||~4.0||~5.0",
        "symfony/translation-contracts":        "^1.1||^2.2",
        "marfatech/dto-resolver":               "^2.0"
    },

    "require-dev": {
        "roave/security-advisories":            "dev-latest",
        "symfony/validator":                    "^6.0",
        "symfony/monolog-bundle":               "^3.7",
        "symfony/translation":                  "^6.0",
        "marfatech/swagger-resolver-bundle":    "^0.5.0"
    },

    "repositories" : [
        {
            "type": "vcs",
            "url": "git@github.com:marfatech/swagger-resolver-bundle.git"
        }
    ],

    "conflict": {
        "nelmio/api-doc-bundle": "<3.0"
    },

    "suggest": {
        "marfatech/swagger-resolver-bundle":    "Provides possibility to resolve DTO by swagger definition",
        "symfony/monolog-bundle":               "Provides possibility for log information into separate channel",
        "symfony/translation":                  "Provides possibility for translate response codes",
        "symfony/validator":                    "Provides possibility for catch constraint validation"
    },

    "autoload": {
        "psr-4": {
            "MarfaTech\\Bundle\\ApiPlatformBundle\\": ""
        }
    }
}
